From 0ee54a743dc71e3d48b47f798cab69a54de203da Mon Sep 17 00:00:00 2001
From: Jiang Lu <lu.jiang@windriver.com>
Date: Mon, 29 Nov 2021 23:27:34 +0800
Subject: [PATCH] Allow updating files in the /boot directory

This patch adds support for copying all files from the deployment's
/usr/lib/ostree-boot directory to the relevant /boot/ostree/$os-$bootcsum/
directory. This feature can be enabled by 'touch .ostree-bootcsumdir-source'
in /usr/lib/ostree-boot.

Disable selinux check for install_into_boot

Upstream-Status: Inappropriate [LAT specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 src/libostree/ostree-sysroot-deploy.c | 72 +++++++++++++++++++++------
 1 file changed, 57 insertions(+), 15 deletions(-)

diff --git a/src/libostree/ostree-sysroot-deploy.c b/src/libostree/ostree-sysroot-deploy.c
index b8d8c85b..82bcc609 100644
--- a/src/libostree/ostree-sysroot-deploy.c
+++ b/src/libostree/ostree-sysroot-deploy.c
@@ -113,21 +113,6 @@ install_into_boot (OstreeSePolicy *sepolicy,
     {
       if (G_IN_SET (errno, EMLINK, EXDEV))
         {
-          /* Be sure we relabel when copying the kernel, as in current
-           * e.g. Fedora it might be labeled module_object_t or usr_t,
-           * but policy may not allow other processes to read from that
-           * like kdump.
-           * See also https://github.com/fedora-selinux/selinux-policy/commit/747f4e6775d773ab74efae5aa37f3e5e7f0d4aca
-           * This means we also drop xattrs but...I doubt anyone uses
-           * non-SELinux xattrs for the kernel anyways aside from perhaps
-           * IMA but that's its own story.
-           */
-          g_auto(OstreeSepolicyFsCreatecon) fscreatecon = { 0, };
-          const char *boot_path = glnx_strjoina ("/boot/", glnx_basename (dest_subpath));
-          if (!_ostree_sepolicy_preparefscreatecon (&fscreatecon, sepolicy,
-                                                    boot_path, S_IFREG | 0644,
-                                                    error))
-            return FALSE;
           return glnx_file_copy_at (src_dfd, src_subpath, NULL, dest_dfd, dest_subpath,
                                     GLNX_FILE_COPY_NOXATTRS | GLNX_FILE_COPY_DATASYNC,
                                     cancellable, error);
@@ -1706,6 +1691,63 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
         }
     }
 
+    if (fstatat (kernel_layout->boot_dfd, ".ostree-bootcsumdir-source", &stbuf, 0) == 0)
+    {
+      g_auto(GLnxDirFdIterator) dfd_iter = { 0, };
+      if (!glnx_dirfd_iterator_init_at (kernel_layout->boot_dfd, ".", FALSE, &dfd_iter, error))
+        return FALSE;
+
+      while (TRUE)
+        {
+          struct dirent *dent;
+
+          if (!glnx_dirfd_iterator_next_dent (&dfd_iter, &dent, cancellable, error))
+            return FALSE;
+          if (dent == NULL)
+            break;
+
+          /* Skip special files - vmlinuz-* and initramfs-* are handled separately */
+          if (g_str_has_prefix (dent->d_name, "vmlinuz-") || g_str_has_prefix (dent->d_name, "initramfs-"))
+            continue;
+
+          if (fstatat (bootcsum_dfd, dent->d_name, &stbuf, AT_SYMLINK_NOFOLLOW) != 0)
+            {
+              if (errno != ENOENT)
+                {
+                  glnx_set_prefix_error_from_errno (error, "fstatat %s", dent->d_name);
+                  return FALSE;
+                }
+
+              if (fstatat (dfd_iter.fd, dent->d_name, &stbuf, AT_SYMLINK_NOFOLLOW) != 0)
+                {
+                  glnx_set_error_from_errno (error);
+                  return FALSE;
+                }
+              if (S_ISDIR (stbuf.st_mode))
+                {
+                  if (!copy_dir_recurse (kernel_layout->boot_dfd, bootcsum_dfd, dent->d_name,
+                                                     sysroot->debug_flags, cancellable, error))
+                    return FALSE;
+                }
+              else
+                {
+                  if (!install_into_boot (sepolicy,kernel_layout->boot_dfd, dent->d_name,
+                                            bootcsum_dfd, dent->d_name, sysroot->debug_flags,
+                                            cancellable, error))
+                    return FALSE;
+                }
+            }
+        }
+    }
+    else
+    {
+      if (errno != ENOENT)
+        {
+          glnx_set_prefix_error_from_errno (error, "fstatat %s", ".ostree-bootcsumdir-source");
+          return FALSE;
+         }
+     }
+
   g_autofree char *contents = NULL;
   if (!glnx_fstatat_allow_noent (deployment_dfd, "usr/lib/os-release", &stbuf, 0, error))
     return FALSE;
-- 
2.27.0

