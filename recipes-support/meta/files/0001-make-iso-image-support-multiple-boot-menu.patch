From 7aaee819f9eecc14a0061b8dc97e8b1ec7cf79cc Mon Sep 17 00:00:00 2001
From: Hongxu Jia <hongxu.jia@windriver.com>
Date: Wed, 14 Jul 2021 16:15:37 +0800
Subject: [PATCH] make iso image support multiple boot menu

Add bootloader configure options `--label xxx' and `--appends xxx' to
make iso image support multiple boot menu

Keep backward compatibility, if no option --label, use string 'boot' as
default, if no --appends, use --append to instead

Upstream-Status: Inappropriate [lat specific]

Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 scripts/lib/wic/ksparser.py                   |  2 +
 .../wic/plugins/source/isoimage-isohybrid.py  | 55 ++++++++++++-------
 2 files changed, 36 insertions(+), 21 deletions(-)

diff --git a/scripts/lib/wic/ksparser.py b/scripts/lib/wic/ksparser.py
index 409f686389..759d6b86f3 100644
--- a/scripts/lib/wic/ksparser.py
+++ b/scripts/lib/wic/ksparser.py
@@ -171,6 +171,8 @@ class KickStart():
         part.add_argument('--fsuuid')
 
         bootloader = subparsers.add_parser('bootloader')
+        bootloader.add_argument('--label', default=None, action='append')
+        bootloader.add_argument('--appends', default=None, action='append')
         bootloader.add_argument('--append')
         bootloader.add_argument('--configfile')
         bootloader.add_argument('--ptable', choices=('msdos', 'gpt'),
diff --git a/scripts/lib/wic/plugins/source/isoimage-isohybrid.py b/scripts/lib/wic/plugins/source/isoimage-isohybrid.py
index 319a05530a..aa49ca2fb5 100644
--- a/scripts/lib/wic/plugins/source/isoimage-isohybrid.py
+++ b/scripts/lib/wic/plugins/source/isoimage-isohybrid.py
@@ -72,18 +72,24 @@ class IsoImagePlugin(SourcePlugin):
         syslinux_conf += "menu title Select kernel options and boot kernel\n"
         syslinux_conf += "menu tabmsg Press [Tab] to edit, [Return] to select\n"
 
-        syslinux_conf += "DEFAULT boot\n"
-        syslinux_conf += "LABEL boot\n"
+        syslinux_conf += "DEFAULT %s\n" % bootloader.label[0] if bootloader.label else "boot"
+        for i, label in enumerate(bootloader.label or ["boot"]):
+            if i < len(bootloader.appends):
+                append = bootloader.appends[i]
+            else:
+                append = bootloader.append
 
-        kernel = os.environ.get("KERNEL_IMAGETYPE", "bzImage")
-        if os.environ.get("INITRAMFS_IMAGE_BUNDLE", "0") == "1":
-            if get_bitbake_var("INITRAMFS_IMAGE"):
-                kernel = "%s-%s.bin" % \
-                    (get_bitbake_var("KERNEL_IMAGETYPE"), get_bitbake_var("INITRAMFS_LINK_NAME"))
+            syslinux_conf += "LABEL %s\n" % label
+
+            kernel = os.environ.get("KERNEL_IMAGETYPE", "bzImage")
+            if os.environ.get("INITRAMFS_IMAGE_BUNDLE", "0") == "1":
+                if get_bitbake_var("INITRAMFS_IMAGE"):
+                    kernel = "%s-%s.bin" % \
+                        (get_bitbake_var("KERNEL_IMAGETYPE"), get_bitbake_var("INITRAMFS_LINK_NAME"))
 
-        syslinux_conf += "KERNEL /" + kernel + "\n"
-        syslinux_conf += "APPEND initrd=/initrd LABEL=boot %s\n" \
-                             % bootloader.append
+            syslinux_conf += "KERNEL /" + kernel + "\n"
+            syslinux_conf += "APPEND initrd=/initrd LABEL=%s %s\n" \
+                                 % (label, append)
 
         logger.debug("Writing syslinux config %s/ISO/isolinux/isolinux.cfg",
                      cr_workdir)
@@ -117,23 +123,30 @@ class IsoImagePlugin(SourcePlugin):
             grubefi_conf = ""
             grubefi_conf += "serial --unit=0 --speed=115200 --word=8 "
             grubefi_conf += "--parity=no --stop=1\n"
-            grubefi_conf += "default=boot\n"
             grubefi_conf += "timeout=%s\n" % (bootloader.timeout or 10)
             grubefi_conf += "\n"
             grubefi_conf += "search --set=root --label %s " % part.label
             grubefi_conf += "\n"
-            grubefi_conf += "menuentry 'boot'{\n"
+            grubefi_conf += "default=%s\n" % bootloader.label[0] if bootloader.label else "boot"
 
-            kernel = os.environ.get("KERNEL_IMAGETYPE", "bzImage")
-            if os.environ.get("INITRAMFS_IMAGE_BUNDLE", "0") == "1":
-                if get_bitbake_var("INITRAMFS_IMAGE"):
-                    kernel = "%s-%s.bin" % \
-                        (get_bitbake_var("KERNEL_IMAGETYPE"), get_bitbake_var("INITRAMFS_LINK_NAME"))
+            for i, label in enumerate(bootloader.label or ["boot"]):
+                if i < len(bootloader.appends):
+                    append = bootloader.appends[i]
+                else:
+                    append = bootloader.append
+
+                grubefi_conf += "menuentry '%s'{\n" % label
+
+                kernel = os.environ.get("KERNEL_IMAGETYPE", "bzImage")
+                if os.environ.get("INITRAMFS_IMAGE_BUNDLE", "0") == "1":
+                    if get_bitbake_var("INITRAMFS_IMAGE"):
+                        kernel = "%s-%s.bin" % \
+                            (get_bitbake_var("KERNEL_IMAGETYPE"), get_bitbake_var("INITRAMFS_LINK_NAME"))
 
-            grubefi_conf += "linux /%s rootwait %s\n" \
-                            % (kernel, bootloader.append)
-            grubefi_conf += "initrd /initrd \n"
-            grubefi_conf += "}\n"
+                grubefi_conf += "linux /%s rootwait %s\n" \
+                                % (kernel, append)
+                grubefi_conf += "initrd /initrd \n"
+                grubefi_conf += "}\n"
 
             if splashline:
                 grubefi_conf += "%s\n" % splashline
-- 
2.27.0

