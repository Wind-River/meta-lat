# Wind River Linux container images

The images are built from Wind River Linux Assembly Tool Application SDK

## Supported BSPs
        intel-x86-64
        bcm-2xxx-rpi4
        xilinx-zynqmp
        xilinx-zynq
        nxp-imx6
        nxp-imx8
        marvell-cn96xx
        nxp-s32g
        aptiv_cvc_sousa
        intel-socfpga-64
        ti-j72xx
        nxp-ls1028
        nxp-ls1043
        nxp-lx2xxx
        axxiaarm64
        axxiaarm
        amd-snowyowl-64

## How to run an instance of container with docker
        $ docker load -i DEPLOYDIR/@IMAGE_NAME@.docker-image.tar.bz2

### Run an instance of a container
        $ docker run -it @IMAGE_NAME@:latest

## How to run an instance of container with runc
Use runc command to create an instance of a container for a bundle.
A standard container bundle contains all the information needed to load
and run a container. Use a tool umoci to convert an OCI Image to
a Bundle for runc to run

An example to run an instance of a container with runc:
        $ umoci unpack --rootless --image DEPLOYDIR/@IMAGE_NAME@.rootfs-oci:latest container-bundle
        $ cd container-bundle
        $ runc run CONTAINER-ID

Where CONTAINER-ID is the name for the instance of the container

## How to upload image to docker registry
Run skopeo copy to upload container image:
   skopeo copy <option> docker-archive:DEPLOYDIR/@IMAGE_NAME@.docker-image.tar.bz2 docker://docker-registry/@IMAGE_NAME@

docker://docker-reference
 An image in a registry implementing the "Docker Registry HTTP API V2".
 By default, uses the authorization state in either $XDG_RUNTIME_DIR/
 containers/auth.json, which is set using (skopeo login). If the authorization
 state is not found there, $HOME/.docker/config.json is checked, which is
 set using (docker login). If Docker Registry is insecure registry, add
 --dest-tls-verify=false to <option>

## Known issues
- ecryptfs-utils
ecryptfs-utils includes a systemd service ecryptfs.service and a kernel module
ecryptfs.ko. To make ecryptfs.service in container start successfully,
ecryptfs.ko must be inserted in the host system first either by ecryptfs.service
or manually. And then ecryptfs.service in the host system must be stopped,
otherwise it would hold /dev/ecryptfs and prevents ecryptfs.service in container
from accessing /dev/ecryptfs.
In general, a container may depend on some features or devices in the host
system. How to formally handle such dependencies is to be discussed.

## License
The images are provided under the GPL-2.0 license.

Copyright (c) 2020 Wind River Systems Inc.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License version 2 as published by the Free
Software Foundation.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

The images include third party software which might be available under
additional open source licenses, including the base Wind River Linux CD
distribution along with third party dependencies.

## Legal Notices
All product names, logos, and brands are property of their respective owners.
All company, product and service names used in this software are for
identification purposes only. Wind River is a registered trademark of Wind River
Systems, Inc. Linux is a registered trademark owned by Linus Torvalds.

Disclaimer of Warranty / No Support: Wind River does not provide support and
maintenance services for this software, under Wind River's standard Software
Support and Maintenance Agreement or otherwise. Unless required by applicable
law, Wind River provides the software (and each contributor provides its
contribution) on an "AS IS" BASIS, WITHOUT WARRANTIES OF ANY KIND, either
express or implied, including, without limitation, any warranties of TITLE,
NONINFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are
solely responsible for determining the appropriateness of using or
redistributing the software and assume any risks associated with your exercise
of permissions under the license.
