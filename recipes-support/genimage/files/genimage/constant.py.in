#
# Copyright (c) 2021 Wind River Systems, Inc.
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License version 2 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
#
import getpass

DEFAULT_MACHINE = "${MACHINE}"

SUPPORTED_ARM64_MACHINES = "${OSTREE_SUPPORTED_ARM64_MACHINES}".split()

SUPPORTED_ARM32_MACHINES = "${OSTREE_SUPPORTED_ARM32_MACHINES}".split()

SUPPORTED_ARM_MACHINES = "${OSTREE_SUPPORTED_ARM_MACHINES}".split()

SUPPORTED_PKGTYPES = "${SUPPORTED_PKGTYPES}".split()

DEFAULT_IMAGE_PKGTYPE = "${IMAGE_PKGTYPE}"

DEFAULT_RPM_PACKAGE_FEED = "${DEFAULT_RPM_PACKAGE_FEED}".split()
DEFAULT_DEB_PACKAGE_FEED = "${DEFAULT_DEB_PACKAGE_FEED}".split()
DEFAULT_EXTERNAL_DEB_PACKAGE_FEED = "${DEFAULT_EXTERNAL_DEB_PACKAGE_FEED}".split(";")
DEFAULT_PACKAGE_FEED = {
    'rpm': DEFAULT_RPM_PACKAGE_FEED,
    'deb': DEFAULT_DEB_PACKAGE_FEED,
    'external-debian': DEFAULT_EXTERNAL_DEB_PACKAGE_FEED
}

DEFAULT_LOCAL_RPM_PACKAGE_FEED = "${DEFAULT_LOCAL_RPM_PACKAGE_FEED}".split()
DEFAULT_LOCAL_DEB_PACKAGE_FEED = "${DEFAULT_LOCAL_DEB_PACKAGE_FEED}".split()
DEFAULT_LOCAL_PACKAGE_FEED = {
    'rpm': DEFAULT_LOCAL_RPM_PACKAGE_FEED,
    'deb': DEFAULT_LOCAL_DEB_PACKAGE_FEED,
    'external-debian': DEFAULT_EXTERNAL_DEB_PACKAGE_FEED
}

DEFAULT_REMOTE_RPM_PKGDATADIR = "${REMOTE_RPM_PKGDATADIR}"
DEFAULT_REMOTE_DEB_PKGDATADIR = "${REMOTE_DEB_PKGDATADIR}"
DEFAULT_REMOTE_PKGDATADIR = {
    'rpm': DEFAULT_REMOTE_RPM_PKGDATADIR,
    'deb': DEFAULT_REMOTE_DEB_PKGDATADIR
}

DEFAULT_IMAGE = "${LAT_DEFAULT_IMAGE}"

DEFAULT_INITRD_NAME = "initramfs-ostree-image"

DEFAULT_CONTAINER_NAME = "container-base"

DEFAULT_IMAGE_FEATURES = {
    'pkg_globs': None,
    'image_linguas': '${IMAGE_LINGUAS}',
}

RPM_PACKAGE_FEED_ARCHS = '${RPM_PACKAGE_FEED_ARCHS}'
DEB_PACKAGE_FEED_ARCHS = '${DEB_PACKAGE_FEED_ARCHS}'

DEFAULT_PACKAGES_COMMON = '''
    packagegroup-core-boot
    kernel-modules
    packagegroup-core-base-utils
    glib-networking
    ca-certificates
    ostree
    ostree-upgrade-mgr
    os-release
    run-postinsts
    systemd
'''.split()

DEFAULT_PACKAGES_bcm_2xxx_rpi4 = '''
    i2c-tools
    u-boot-uenv
    alsa-utils
    pm-utils
    linux-firmware
    u-boot
    kernel-devicetree
    kernel-image-image
'''.split()

DEFAULT_PACKAGES_intel_x86_64 = '''
    lmsensors
    grub-efi
'''.split()

DEFAULT_PACKAGES_xilinx_zynqmp = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-image
'''.split()

DEFAULT_PACKAGES_xilinx_zynq = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-zimage
'''.split()

DEFAULT_PACKAGES_nxp_imx8 = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-image
    i2c-tools
    can-utils
    pm-utils
    alsa-utils
    mtdev
    linux-firmware-imx-sdma-imx7d
    ptpd
'''.split()

DEFAULT_PACKAGES_nxp_imx6 = '''
    u-boot-uenv
    kernel-image-zimage
    kernel-devicetree
    i2c-tools
    can-utils
    pm-utils
    alsa-utils
'''.split()


DEFAULT_PACKAGES_marvell_cn96xx = '''
    kernel-image-image
    u-boot-uenv
'''.split()

DEFAULT_PACKAGES_aptiv_cvc_sousa = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-image
    linuxptp
    linuxptp-configs
    can-utils
    i2c-tools
    u-boot-s32
    atf-s32g
'''.split()

DEFAULT_PACKAGES_nxp_s32g = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-image
    can-utils
    ptpd
    u-boot-s32
    atf-s32g
    libp11
    pkcs11-hse
    pkcs11-hse-examples
'''.split()

DEFAULT_PACKAGES_intel_socfpga_64 = '''
    u-boot-uenv
    u-boot-socfpga
    kernel-devicetree
    kernel-image-image
    i2c-tools
    intel-rsu
'''.split()

DEFAULT_PACKAGES_ti_j72xx = '''
    u-boot-uenv
    kernel-devicetree
    kernel-image-image
'''.split()

DEFAULT_PACKAGES_nxp_ls1028 = '''
    u-boot-uenv
    kernel-image-image
    kernel-devicetree
    linuxptp
    tsntool
    iproute2-tc
'''.split()

DEFAULT_PACKAGES_nxp_ls1043 = '''
    u-boot-uenv
    kernel-image-image
    kernel-devicetree
    linuxptp
    fmc
'''.split()

DEFAULT_PACKAGES_nxp_lx2xxx = '''
    u-boot-uenv
    kernel-image-image
    kernel-devicetree
    i2c-tools
    can-utils
    dce
    odp
    ofp
    restool
'''.split()

DEFAULT_PACKAGES_axxiaarm64 = '''
    u-boot-uenv
    kernel-image-uimage
    kernel-devicetree
'''.split()

DEFAULT_PACKAGES_axxiaarm = '''
    u-boot-uenv
    kernel-image-uimage
    kernel-devicetree
'''.split()

# default rootfs: ${LAT_DEFAULT_IMAGE}
DEFAULT_PACKAGES = {
    'intel-x86-64': DEFAULT_PACKAGES_intel_x86_64 + DEFAULT_PACKAGES_COMMON,
    'bcm-2xxx-rpi4': DEFAULT_PACKAGES_bcm_2xxx_rpi4 + DEFAULT_PACKAGES_COMMON,
    'xilinx-zynqmp': DEFAULT_PACKAGES_xilinx_zynqmp + DEFAULT_PACKAGES_COMMON,
    'xilinx-zynq': DEFAULT_PACKAGES_xilinx_zynq + DEFAULT_PACKAGES_COMMON,
    'nxp-imx6': DEFAULT_PACKAGES_nxp_imx6 + DEFAULT_PACKAGES_COMMON,
    'nxp-imx8': DEFAULT_PACKAGES_nxp_imx8 + DEFAULT_PACKAGES_COMMON,
    'marvell-cn96xx': DEFAULT_PACKAGES_marvell_cn96xx + DEFAULT_PACKAGES_COMMON,
    'nxp-s32g': DEFAULT_PACKAGES_nxp_s32g + DEFAULT_PACKAGES_COMMON,
    'aptiv_cvc_sousa': DEFAULT_PACKAGES_aptiv_cvc_sousa + DEFAULT_PACKAGES_COMMON,
    'intel-socfpga-64': DEFAULT_PACKAGES_intel_socfpga_64 + DEFAULT_PACKAGES_COMMON,
    'ti-j72xx': DEFAULT_PACKAGES_ti_j72xx + DEFAULT_PACKAGES_COMMON,
    'nxp-ls1028': DEFAULT_PACKAGES_nxp_ls1028 + DEFAULT_PACKAGES_COMMON,
    'nxp-ls1043': DEFAULT_PACKAGES_nxp_ls1043 + DEFAULT_PACKAGES_COMMON,
    'nxp-lx2xxx': DEFAULT_PACKAGES_nxp_lx2xxx + DEFAULT_PACKAGES_COMMON,
    'axxiaarm64': DEFAULT_PACKAGES_axxiaarm64 + DEFAULT_PACKAGES_COMMON,
    'axxiaarm': DEFAULT_PACKAGES_axxiaarm + DEFAULT_PACKAGES_COMMON,
}

DEFAULT_OSTREE_WIFI_PACKAGES = '''
packagegroup-base-wifi
YOUR_WIFI_KERNEL_MODULE
YOUR_WIFI_LINUX_FIRMWARE
'''.split()

OSTREE_WIFI_PACKAGES = "${OSTREE_WIFI_PACKAGES}".split() if "${OSTREE_WIFI_PACKAGES}".strip() else DEFAULT_OSTREE_WIFI_PACKAGES

OSTREE_INITRD_PACKAGES = '''
    glib-networking
    ca-certificates
    init-ifupdown ifupdown
    debianutils-run-parts iproute2-ip
    e2fsprogs-e2fsck killall
    mttyexec grub eject
    ostree ostree-switchroot
    initramfs-ostree bash
    kmod bzip2 gnupg kbd
    util-linux util-linux-setsid
    util-linux-mount util-linux-blkid
    util-linux-lsblk util-linux-fdisk
    util-linux-fsck util-linux-blockdev
    dosfstools curl udev mdadm
    base-passwd rng-tools e2fsprogs-tune2fs
    e2fsprogs-resize2fs pv gzip findutils
    tar grep sed gawk busybox busybox-udhcpc
'''.split()

DEFAULT_CONTAINER_PACKAGES = '''
    base-files
    base-passwd
    ca-certificates
    ${PKG_MNGT_PACKAGE}
    openssh
    os-release
    packagegroup-core-base-utils
    run-postinsts
    update-alternatives-opkg
'''.split()

DEFAULT_GPG_DATA = {
  'gpg_path':'/tmp/.lat_gnupg_%s'%getpass.getuser(),
  'ostree': {
    'gpgid': '${OSTREE_GPGID}',
    'gpgkey': '$OECORE_NATIVE_SYSROOT/usr/share/genimage/rpm_keys/RPM-GPG-PRIVKEY-${OSTREE_GPGID}',
    'gpg_password': '${OSTREE_GPG_PASSPHRASE}'
  },
  'grub': {
    'BOOT_GPG_NAME': '${BOOT_GPG_NAME}',
    'BOOT_GPG_PASSPHRASE':'${BOOT_GPG_PASSPHRASE}',
    'BOOT_KEYS_DIR': '$OECORE_NATIVE_SYSROOT/usr/share/bootfs/boot_keys',
    'BOOT_GPG_KEY': '$OECORE_NATIVE_SYSROOT/usr/share/bootfs/boot_keys/BOOT-GPG-PRIVKEY-SecureBootCore',
    'BOOT_SINGED_SHIM': '${BOOT_SINGED_SHIM}',
    'BOOT_SINGED_SHIMTOOL': '${BOOT_SINGED_SHIMTOOL}',
    'BOOT_SINGED_GRUB': '${BOOT_SINGED_GRUB}',
    'BOOT_EFITOOL': '${BOOT_EFITOOL}',
    'BOOT_GRUB_CFG': '${BOOT_GRUB_CFG}',
    'BOOT_NOSIG_GRUB': '${BOOT_NOSIG_GRUB}',
    'EFI_SECURE_BOOT': '${EFI_SECURE_BOOT}'
  },
}

DEFAULT_OCI_CONTAINER_DATA = {
  'OCI_IMAGE_AUTHOR':'${OCI_IMAGE_AUTHOR}',
  'OCI_IMAGE_AUTHOR_EMAIL' : '${OCI_IMAGE_AUTHOR_EMAIL}',
  'OCI_IMAGE_TAG': '${OCI_IMAGE_TAG}',
  'OCI_IMAGE_RUNTIME_UID': '${OCI_IMAGE_RUNTIME_UID}',
  'OCI_IMAGE_ENTRYPOINT': '',
  'OCI_IMAGE_ENTRYPOINT_ARGS': '/bin/sh',
  'OCI_IMAGE_WORKINGDIR': '${OCI_IMAGE_WORKINGDIR}',
  'OCI_IMAGE_PORTS': '${OCI_IMAGE_PORTS}',
  'OCI_IMAGE_LABELS': '${OCI_IMAGE_LABELS}',
  'OCI_IMAGE_ENV_VARS': '${OCI_IMAGE_ENV_VARS}',
}

DEFAULT_OSTREE_DATA = {
  'ostree_use_ab': '${OSTREE_USE_AB}',
  'ostree_osname': '${OSTREE_OSNAME}',
  'ostree_skip_boot_diff': '${OSTREE_SKIP_BOOT_DIFF}',
  'ostree_remote_url': '',
  'ostree_install_device': '',
  'ostree_extra_install_args':'',
  'install_kickstart_url':'',
  'install_net_params':'',
  'install_net_mode':'',
  'OSTREE_GRUB_USER': '${OSTREE_GRUB_USER}',
  'OSTREE_GRUB_PW_FILE': '$OECORE_NATIVE_SYSROOT/usr/share/bootfs/boot_keys/ostree_grub_pw',
  'OSTREE_FDISK_BLM': int('${OSTREE_FDISK_BLM}'),
  'OSTREE_FDISK_BSZ': int('${OSTREE_FDISK_BSZ}'),
  'OSTREE_FDISK_RSZ': int('${OSTREE_FDISK_RSZ}'),
  'OSTREE_FDISK_VSZ': int('${OSTREE_FDISK_VSZ}'),
  'OSTREE_FDISK_FSZ': int('${OSTREE_FDISK_FSZ}'),
  'OSTREE_CONSOLE': '${OSTREE_CONSOLE}',
}

EXTRA_IMAGE_BOOT_FILES = {
    '${MACHINE}': '',
}
IMAGE_BOOT_FILES = "${IMAGE_BOOT_FILES}"

OSTREE_KERNEL = "${OSTREE_KERNEL}"
RAMDISK_EXT = "${RAMDISK_EXT}"
KERNEL_DEVICETREE = "${KERNEL_DEVICETREE}"

DEFAULT_WIC_DATA = {
  'OSTREE_WKS_BOOT_SIZE': '${OSTREE_WKS_BOOT_SIZE}',
  'OSTREE_WKS_EFI_SIZE': '${OSTREE_WKS_EFI_SIZE}',
  'OSTREE_WKS_ROOT_SIZE': '${OSTREE_WKS_ROOT_SIZE}',
  'OSTREE_WKS_FLUX_SIZE': '${OSTREE_WKS_FLUX_SIZE}',
  'OSTREE_FLUX_PART': '${OSTREE_FLUX_PART}',
  'OSTREE_SD_BOOT_ALIGN': '${OSTREE_SD_BOOT_ALIGN}',
  'OSTREE_SD_UBOOT_WIC1': '${OSTREE_SD_UBOOT_WIC1}',
  'OSTREE_SD_UBOOT_WIC2': '${OSTREE_SD_UBOOT_WIC2}',
  'OSTREE_SD_UBOOT_WIC3': '${OSTREE_SD_UBOOT_WIC3}',
  'OSTREE_SD_UBOOT_WIC4': '${OSTREE_SD_UBOOT_WIC4}',
}

PACKAGE_MANAGER_SECTION_RPM = '''\
### Dnf/Rpm
Prerequisite: The dnf and rpm are installed on image

#### Install a normal package
The images are locked by default, so need unlock firstly:
    $ ostree admin unlock --hotfix

To install a package
    $ dnf install <package>

To remove a package
    $ dnf remove <package>

#### Install Graphic Desktop (XFCE)
To install packages by following steps:
    $ ostree admin unlock --hotfix
    $ dnf install -y packagegroup-xfce-base \
                     packagegroup-core-x11-base \
                     gsettings-desktop-schemas \
    $ systemctl set-default graphical.target
    $ reboot
'''

PACKAGE_MANAGER_SECTION_DEB = '''\
### Apt/Dpkg
Prerequisite: The apt and dpkg are installed on image

#### Install a normal package
The images are locked by default, so need unlock firstly:
    $ ostree admin unlock --hotfix

To install a package
    $ apt install <package>

To remove a package
    $ apt remove <package>
'''

PACKAGE_MANAGER_SECTION = {
    'rpm': PACKAGE_MANAGER_SECTION_RPM,
    'deb': PACKAGE_MANAGER_SECTION_DEB,
    'external-debian': PACKAGE_MANAGER_SECTION_DEB
}

OSTREE_COPY_IMAGE_BOOT_FILES = "${OSTREE_COPY_IMAGE_BOOT_FILES}"

DEFAULT_USTART_POST_SCRIPT = "${USTART_POST_SCRIPT}"
DEFAULT_WIC_POST_SCRIPT = "${WIC_POST_SCRIPT}"

USE_FIT = "${OSTREE_USE_FIT}"

APP_DIRECTORY = "${APP_DIRECTORY}"
IS_FMU_ENABLED = "${IS_FMU_ENABLED}"
DEFAULT_WIC_FMU_CONFIG = '''\
bootloader --ptable msdos
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota_uboot --ondisk mmcblk --fstype=vfat --label boot --active --align 10240 --size=32M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota_boot --ondisk mmcblk --fstype=ext4 --label otaboot --align 4 --type logical --size=512M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota_boot --ondisk mmcblk --fstype=ext4 --label otaboot_b --align 4 --type logical --size=512M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota --ondisk mmcblk --fstype=ext4 --label otaroot --align 4 --type logical --size=2048M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota --ondisk mmcblk --fstype=ext4 --label otaroot_b --align 4 --type logical --size=2048M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota_apps --ondisk mmcblk --fstype=ext4 --label apps --align 4 --type logical --size=2048M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/vxapp --ondisk mmcblk --fstype=ext4 --label vxapp --align 4 --type logical --size=64M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/vxapp --ondisk mmcblk --fstype=ext4 --label vxapp_b --align 4 --type logical --size=64M --overhead-factor 1
part / --source rootfs --rootfs-dir=${LAT_WORKDIR}/rootfs_ota_var --ondisk mmcblk --fstype=ext4 --label fluxdata --align 4
'''
