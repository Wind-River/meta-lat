From 0bf6d86510689f5f125f8290abf24e50bb284ffc Mon Sep 17 00:00:00 2001
From: Jason Wessel <jason.wessel@windriver.com>
Date: Thu, 22 Aug 2019 12:00:27 -0700
Subject: [PATCH] ostree-bootloader-uboot.c: Create links to the deploy
 directory in /boot

Having service links in the deploy directory allows a boot loader to
be more throughly locked down.  For example:

% ls -l /boot/? |awk '{print $1" "$9" "$10" "$11}'
lrwxrwxrwx /boot/1 -> ostree/lat_os-7d5ec36921a5a5e5b5ecc98da29378581a4ed49e93418f5a8f096a85c62e46ae
lrwxrwxrwx /boot/2 -> ostree/lat_os-0713c2f3c782a77f7579e5b94c5a17935f35070c2e73f80a6a52f9304d07812e

The kernel arguments are not taken from the ostree "hints" in this
case, because the configuration is much more locked down and there no
command used in u-boot to run "env import ...".  The boot loader will
use the service links and other variables to select a rollback or
primary boot choices.

Upstream-Status: pending

Signed-off-by: Jason Wessel <jason.wessel@windriver.com>
---
 src/libostree/ostree-bootloader-uboot.c | 25 +++++++++++++++++++++++++
 1 file changed, 25 insertions(+)

diff --git a/src/libostree/ostree-bootloader-uboot.c b/src/libostree/ostree-bootloader-uboot.c
index 2d99466e..7c6e48cc 100644
--- a/src/libostree/ostree-bootloader-uboot.c
+++ b/src/libostree/ostree-bootloader-uboot.c
@@ -139,6 +139,14 @@ create_config_from_boot_loader_entries (OstreeBootloaderUboot     *self,
 
       bootdir = strndup (val, strrchr(val, '/') - val);
       g_ptr_array_add (new_lines, g_strdup_printf ("bootdir%s=%s/", index_suffix, bootdir));
+      g_autofree char *lbootdir = g_strdup_printf ("boot/%i", i + 1);
+      unlinkat(self->sysroot->sysroot_fd, lbootdir, 0);
+      if (symlinkat(bootdir + 1, self->sysroot->sysroot_fd, lbootdir) < 0)
+        {
+          g_set_error (error, G_IO_ERROR, G_IO_ERROR_FAILED,
+                       "Could not link boot directory.");
+          return FALSE;
+        }
 
       val = ostree_bootconfig_parser_get (config, "initrd");
       if (val)
@@ -155,6 +163,23 @@ create_config_from_boot_loader_entries (OstreeBootloaderUboot     *self,
           if (i == 0)
             if (!append_system_uenv (self, val, new_lines, cancellable, error))
               return FALSE;
+          g_auto(GStrv) opts = g_strsplit (val, " ", -1);
+          for (char **iter = opts; *iter; iter++)
+            {
+              const char *opt = *iter;
+              if (g_str_has_prefix (opt, "ostree=/ostree/"))
+                {
+                  g_autofree char *boot_link = g_strdup (opt + strlen ("ostree=/ostree/"));
+                  g_autofree char *linkdir = g_strdup_printf ("ostree/%i", i + 1);
+                  unlinkat(self->sysroot->sysroot_fd, linkdir, 0);
+                  if (symlinkat(boot_link, self->sysroot->sysroot_fd, linkdir) < 0)
+                    {
+                      g_set_error (error, G_IO_ERROR, G_IO_ERROR_FAILED,
+                                   "Could not link boot directory.");
+                      return FALSE;
+                    }
+                }
+            }
         }
     }
 
-- 
2.21.0

